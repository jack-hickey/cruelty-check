PRAGMA defer_foreign_keys=TRUE;
CREATE TABLE Brands (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  Name TEXT NOT NULL UNIQUE COLLATE NOCASE CHECK(length(Name) <= 50),
  Parent_ID INTEGER,
  Cruelty_Free INTEGER NOT NULL DEFAULT 0,
  B_Corp INTEGER NOT NULL DEFAULT 0,
  Animal_Testing INTEGER NOT NULL DEFAULT 0, Search_Name TEXT,
  FOREIGN KEY (Parent_ID) REFERENCES Brands(ID)
);
CREATE TABLE Products (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL CHECK(length(Name) <= 100),
    Image TEXT NOT NULL CHECK(length(Image) <= 50),
    Brand_ID INTEGER NOT NULL,
    Is_Vegan INTEGER NOT NULL DEFAULT 0,
    Accepted INTEGER NOT NULL DEFAULT 0, Fair_Trade INTEGER NOT NULL DEFAULT 0, Search_Name TEXT,
    FOREIGN KEY (Brand_ID) REFERENCES Brands(ID)
);
INSERT INTO Brands VALUES(1,'Unilever',NULL,0,0,1,'unilever');
INSERT INTO Brands VALUES(2,'Dove',1,1,0,0,'dove');
INSERT INTO Brands VALUES(3,'Yıldız Holding',NULL,0,0,0,'yıldız holding');
INSERT INTO Brands VALUES(4,'Pladis',3,0,0,0,'pladis');
INSERT INTO Brands VALUES(5,'McVitie''s',4,0,0,0,'mcvities');
INSERT INTO Brands VALUES(6,'Costco Wholesale Corporation',NULL,0,0,1,'costco wholesale corporation');
INSERT INTO Brands VALUES(7,'Kirkland Signature',6,0,0,0,'kirkland signature');
INSERT INTO Brands VALUES(8,'Sainsbury''s',NULL,1,0,0,'sainsburys');
INSERT INTO Brands VALUES(9,'Tesco',NULL,0,0,0,'tesco');
INSERT INTO Brands VALUES(10,'Morrisons',NULL,1,0,0,'morrisons');
INSERT INTO Brands VALUES(11,'Asda',NULL,0,0,0,'asda');
INSERT INTO Brands VALUES(12,'John Lewis Partnership',NULL,0,0,0,'john lewis partnership');
INSERT INTO Brands VALUES(13,'Waitrose',12,1,0,0,'waitrose');
INSERT INTO Brands VALUES(14,'Aldi',NULL,1,0,0,'aldi');
INSERT INTO Brands VALUES(15,'Lidl',NULL,1,0,0,'lidl');
INSERT INTO Brands VALUES(16,'Mars, Incorporated',NULL,0,0,1,'mars, incorporated');
INSERT INTO Brands VALUES(17,'Ben''s Original',16,0,0,0,'bens original');
INSERT INTO Brands VALUES(18,'Ferrero',NULL,0,0,1,'ferrero');
INSERT INTO Brands VALUES(19,'Burton’s Biscuit Company',18,0,0,0,'burtons biscuit company');
INSERT INTO Brands VALUES(20,'Nestlé',NULL,0,0,1,'nestle');
INSERT INTO Brands VALUES(21,'Rowntree''s',20,0,0,0,'rowntrees');
INSERT INTO Brands VALUES(22,'Jealous Sweets',NULL,0,0,0,'jealous sweets');
INSERT INTO Brands VALUES(23,'PepsiCo',NULL,0,0,1,'pepsico');
INSERT INTO Brands VALUES(24,'Frito-Lay',23,0,0,0,'fritolay');
INSERT INTO Brands VALUES(25,'Doritos',24,0,0,0,'doritos');
INSERT INTO Brands VALUES(26,'Freeway',15,0,0,0,'freeway');
INSERT INTO Products VALUES(1,'Intensive Repair Shampoo','04c0b5d0-9211-43fe-8ca2-065e380c09e4.jpeg',2,1,1,0,'intensive repair shampoo');
INSERT INTO Products VALUES(3,'Daily Moisture Shampoo','baa7bff4-0825-43f7-a415-a2f642649aa2.jpg',2,0,1,0,'daily moisture shampoo');
INSERT INTO Products VALUES(4,'Hobnobs','a628e3b7-e010-4a66-ab17-8e7bcdb2dc40.jpg',5,1,1,0,'hobnobs');
INSERT INTO Products VALUES(5,'Spring Water','77f3d749-21a7-4648-ba7b-c741cdb6d9cd.webp',7,1,1,0,'spring water');
INSERT INTO Products VALUES(6,'Jammie Dodgers Raspberry','a62e58cf-4182-470e-ad11-22b2e9ea87c5.png',19,1,1,0,'jammie dodgers raspberry');
INSERT INTO Products VALUES(7,'Fruit Gums','167e370d-f92b-498d-b691-2213d01c19f1.jpg',21,1,1,0,'fruit gums');
INSERT INTO Products VALUES(8,'Tangy Worms','5fa4b562-af4f-4ebd-b9d4-246b659d229e.webp',22,1,1,0,'tangy worms');
INSERT INTO Products VALUES(9,'Chocolate Mint Thins','064f3c08-4d01-4e31-b55e-4fb5726f0b5f.jpeg',11,1,1,0,'chocolate mint thins');
INSERT INTO Products VALUES(10,'Butter Beans In Water','574494fb-096a-46b8-bd63-273e5900c36d.jpg',8,1,1,0,'butter beans in water');
INSERT INTO Products VALUES(11,'Doritos Chilli Heatwave','e462f6cc-5348-475d-b8b4-eef718fd3d1d.jpg',25,1,1,0,'doritos chilli heatwave');
INSERT INTO Products VALUES(12,'Diet Lemonade','1f2b52f9-b3b4-4a70-bba0-c713a08a15ad.webp',26,1,1,0,'diet lemonade');
INSERT INTO Products VALUES(13,'Nesquik Chocolate Milkshake Powder','f22e248d-8eac-4275-8307-425e1dfb70e2.webp',20,0,1,0,'nesquik chocolate milkshake powder');
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('Brands',26);
INSERT INTO sqlite_sequence VALUES('Products',13);

CREATE INDEX IF NOT EXISTS idx_brands_search_name ON Brands(Search_Name);
CREATE INDEX IF NOT EXISTS idx_products_search_name ON Products(Search_Name);
CREATE INDEX IF NOT EXISTS idx_brands_parent_id ON Brands(Parent_ID);
CREATE INDEX IF NOT EXISTS idx_brands_id ON Brands(ID);

DROP TABLE IF EXISTS ProductsFTS;
DROP TABLE IF EXISTS BrandsFTS;

DROP TRIGGER IF EXISTS trg_products_insert;
DROP TRIGGER IF EXISTS trg_products_update;
DROP TRIGGER IF EXISTS trg_products_delete;
DROP TRIGGER IF EXISTS trg_brands_update;
DROP TRIGGER IF EXISTS trg_brands_delete;
DROP TRIGGER IF EXISTS trg_brands_insert;
DROP TRIGGER IF EXISTS try_brandsfts_insert;
DROP TRIGGER IF EXISTS try_brandsfts_update;
DROP TRIGGER IF EXISTS try_brandsfts_delete;

CREATE VIRTUAL TABLE ProductsFTS USING fts5(
    ProductName,
    BrandName
);

CREATE VIRTUAL TABLE BrandsFTS USING fts5(
    BrandName
);

INSERT INTO ProductsFTS (rowid, ProductName, BrandName)
SELECT p.ID, p.Search_Name, b.Search_Name
FROM Products p
JOIN Brands b ON p.Brand_ID = b.ID;

INSERT INTO BrandsFTS (rowid, BrandName)
SELECT ID, Search_Name
FROM Brands;

CREATE TRIGGER trg_products_insert AFTER INSERT ON Products
BEGIN
    INSERT INTO ProductsFTS (rowid, ProductName, BrandName)
    VALUES (NEW.ID, NEW.Search_Name, (SELECT Search_Name FROM Brands WHERE ID = NEW.Brand_ID));
END;

CREATE TRIGGER trg_products_update AFTER UPDATE ON Products
BEGIN
    UPDATE ProductsFTS
    SET ProductName = NEW.Search_Name,
        BrandName = (SELECT Search_Name FROM Brands WHERE ID = NEW.Brand_ID)
    WHERE rowid = NEW.ID;
END;

CREATE TRIGGER trg_products_delete AFTER DELETE ON Products
BEGIN
    DELETE FROM ProductsFTS
    WHERE rowid = OLD.ID;
END;
CREATE TRIGGER trg_brands_insert AFTER INSERT ON Brands
BEGIN
    INSERT OR REPLACE INTO ProductsFTS (rowid, ProductName, BrandName)
    SELECT p.ID, p.Search_Name, NEW.Search_Name
    FROM Products p
    WHERE p.Brand_ID = NEW.ID;
END;
CREATE TRIGGER trg_brands_update AFTER UPDATE ON Brands
BEGIN
    UPDATE ProductsFTS
    SET BrandName = NEW.Search_Name
    WHERE BrandName = OLD.Search_Name;
END;

CREATE TRIGGER trg_brands_delete AFTER DELETE ON Brands
BEGIN
    DELETE FROM ProductsFTS
    WHERE BrandName = OLD.Search_Name;
END;

CREATE TRIGGER trg_brandsfts_insert AFTER INSERT ON Brands
BEGIN
    INSERT INTO BrandsFTS (rowid, BrandName)
    VALUES (NEW.ID, NEW.Search_Name);
END;

CREATE TRIGGER trg_brandsfts_update AFTER UPDATE ON Brands
BEGIN
    UPDATE BrandsFTS
    SET BrandName = NEW.Search_Name
    WHERE rowid = NEW.ID;
END;

CREATE TRIGGER trg_brandsfts_delete AFTER DELETE ON Brands
BEGIN
    DELETE FROM BrandsFTS
    WHERE rowid = OLD.ID;
END;
