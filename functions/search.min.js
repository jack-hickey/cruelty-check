export async function onRequestPost(e){const{request:n,env:s}=e;let r;try{r=await n.json()}catch{return new Response("Invalid JSON",{status:400})}const t=(r.query||"").trim().toLowerCase().split(/\s+/),a=[],o=[],R=[];t.forEach(e=>{a.push("(INSTR(LOWER(p.Name), ?) > 0)"),a.push("(INSTR(LOWER(b.Name), ?) > 0)"),o.push("(INSTR(LOWER(p.Name), ?) > 0 OR INSTR(LOWER(b.Name), ?) > 0)"),R.push(e,e)}),t.forEach(e=>{R.push(e,e)});const p=`\n    SELECT p.*, b.Name AS Brand, b.Cruelty_Free,\n      (${a.join(" + ")}) AS score\n    FROM Products p\n    LEFT JOIN Brands b ON b.ID = p.Brand_ID\n    WHERE ${o.join(" OR ")}\n    ORDER BY score DESC\n  `,{results:u}=await s.DATABASE.prepare(p).bind(...R).all();return Response.json(u)}